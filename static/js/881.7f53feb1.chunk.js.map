{"version":3,"file":"static/js/881.7f53feb1.chunk.js","mappings":"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","sources":["../node_modules/classnames/index.js","../node_modules/body-scroll-lock/lib/bodyScrollLock.esm.js","../node_modules/@bedrock-layout/use-stateful-ref/lib/index.m.js","../node_modules/react-responsive-modal/src/CloseIcon.tsx","../node_modules/@bedrock-layout/use-forwarded-ref/lib/index.m.js","../node_modules/@cloudinary/transformation-builder-sdk/internal/qualifier/QualifierValue.js","../node_modules/@cloudinary/transformation-builder-sdk/internal/utils/unsupportedError.js","../node_modules/@cloudinary/transformation-builder-sdk/internal/models/qualifierToJson.js","../node_modules/@cloudinary/transformation-builder-sdk/internal/models/QualifierModel.js","../node_modules/@cloudinary/transformation-builder-sdk/internal/qualifier/Qualifier.js","../node_modules/@cloudinary/transformation-builder-sdk/qualifiers/flag/FlagQualifier.js","../node_modules/@cloudinary/transformation-builder-sdk/internal/models/actionToJson.js","../node_modules/@cloudinary/transformation-builder-sdk/internal/models/ActionModel.js","../node_modules/@cloudinary/transformation-builder-sdk/internal/Action.js","../node_modules/@cloudinary/transformation-builder-sdk/internal/utils/dataStructureUtils.js","../node_modules/@cloudinary/transformation-builder-sdk/actions/background/actions/BackgroundColor.js","../node_modules/@cloudinary/transformation-builder-sdk/internal/RawAction.js","../node_modules/@cloudinary/transformation-builder-sdk/qualifiers/flag.js","../node_modules/@cloudinary/transformation-builder-sdk/qualifiers/format/FormatQualifier.js","../node_modules/@cloudinary/transformation-builder-sdk/internal/utils/objectFlip.js","../node_modules/@cloudinary/transformation-builder-sdk/internal/internalConstants.js","../node_modules/@cloudinary/transformation-builder-sdk/actions/delivery/DeliveryAction.js","../node_modules/@cloudinary/transformation-builder-sdk/qualifiers/progressive.js","../node_modules/@cloudinary/transformation-builder-sdk/actions/delivery/DeliveryFormatAction.js","../node_modules/@cloudinary/transformation-builder-sdk/transformation/Transformation.js","../node_modules/@cloudinary/transformation-builder-sdk/internal/utils/prepareColor.js","../node_modules/@cloudinary/transformation-builder-sdk/internal/models/IErrorObject.js","../node_modules/@cloudinary/transformation-builder-sdk/transformation/ImageTransformation.js","../node_modules/@cloudinary/url-gen/internal/internalConstants.js","../node_modules/@cloudinary/url-gen/config/URLConfig.js","../node_modules/@cloudinary/url-gen/config/BaseConfig.js","../node_modules/@cloudinary/url-gen/sdkAnalytics/stringPad.js","../node_modules/@cloudinary/url-gen/sdkAnalytics/base64Map.js","../node_modules/@cloudinary/url-gen/sdkAnalytics/encodeVersion.js","../node_modules/@cloudinary/url-gen/sdkAnalytics/reverseVersion.js","../node_modules/@cloudinary/url-gen/sdkAnalytics/getSDKAnalyticsSignature.js","../node_modules/@cloudinary/url-gen/sdkAnalytics/getAnalyticsOptions.js","../node_modules/@cloudinary/url-gen/internal/utils/packageVersion.js","../node_modules/@cloudinary/url-gen/assets/CloudinaryFile.js","../node_modules/@cloudinary/url-gen/internal/url/cloudinaryURL.js","../node_modules/@cloudinary/url-gen/internal/url/urlUtils/publicIDContainsVersion.js","../node_modules/@cloudinary/url-gen/internal/url/urlUtils/isUrl.js","../node_modules/@cloudinary/url-gen/internal/url/urlUtils/isFileName.js","../node_modules/@cloudinary/url-gen/assets/CloudinaryTransformable.js","../node_modules/@cloudinary/url-gen/assets/CloudinaryImage.js","../node_modules/@cloudinary/transformation-builder-sdk/transformation/VideoTransformation.js","../node_modules/@cloudinary/url-gen/assets/CloudinaryVideo.js","../node_modules/@cloudinary/url-gen/instance/Cloudinary.js"],"sourcesContent":["/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\tvar nativeCodeString = '[native code]';\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n// Older browsers don't support event options, feature detect it.\n\n// Adopted and modified solution from Bohdan Didukh (2017)\n// https://stackoverflow.com/questions/41594997/ios-10-safari-prevent-scrolling-behind-a-fixed-overlay-and-maintain-scroll-posi\n\nvar hasPassiveEvents = false;\nif (typeof window !== 'undefined') {\n  var passiveTestOptions = {\n    get passive() {\n      hasPassiveEvents = true;\n      return undefined;\n    }\n  };\n  window.addEventListener('testPassive', null, passiveTestOptions);\n  window.removeEventListener('testPassive', null, passiveTestOptions);\n}\n\nvar isIosDevice = typeof window !== 'undefined' && window.navigator && window.navigator.platform && (/iP(ad|hone|od)/.test(window.navigator.platform) || window.navigator.platform === 'MacIntel' && window.navigator.maxTouchPoints > 1);\n\n\nvar locks = [];\nvar documentListenerAdded = false;\nvar initialClientY = -1;\nvar previousBodyOverflowSetting = void 0;\nvar previousBodyPaddingRight = void 0;\n\n// returns true if `el` should be allowed to receive touchmove events.\nvar allowTouchMove = function allowTouchMove(el) {\n  return locks.some(function (lock) {\n    if (lock.options.allowTouchMove && lock.options.allowTouchMove(el)) {\n      return true;\n    }\n\n    return false;\n  });\n};\n\nvar preventDefault = function preventDefault(rawEvent) {\n  var e = rawEvent || window.event;\n\n  // For the case whereby consumers adds a touchmove event listener to document.\n  // Recall that we do document.addEventListener('touchmove', preventDefault, { passive: false })\n  // in disableBodyScroll - so if we provide this opportunity to allowTouchMove, then\n  // the touchmove event on document will break.\n  if (allowTouchMove(e.target)) {\n    return true;\n  }\n\n  // Do not prevent if the event has more than one touch (usually meaning this is a multi touch gesture like pinch to zoom).\n  if (e.touches.length > 1) return true;\n\n  if (e.preventDefault) e.preventDefault();\n\n  return false;\n};\n\nvar setOverflowHidden = function setOverflowHidden(options) {\n  // If previousBodyPaddingRight is already set, don't set it again.\n  if (previousBodyPaddingRight === undefined) {\n    var _reserveScrollBarGap = !!options && options.reserveScrollBarGap === true;\n    var scrollBarGap = window.innerWidth - document.documentElement.clientWidth;\n\n    if (_reserveScrollBarGap && scrollBarGap > 0) {\n      previousBodyPaddingRight = document.body.style.paddingRight;\n      document.body.style.paddingRight = scrollBarGap + 'px';\n    }\n  }\n\n  // If previousBodyOverflowSetting is already set, don't set it again.\n  if (previousBodyOverflowSetting === undefined) {\n    previousBodyOverflowSetting = document.body.style.overflow;\n    document.body.style.overflow = 'hidden';\n  }\n};\n\nvar restoreOverflowSetting = function restoreOverflowSetting() {\n  if (previousBodyPaddingRight !== undefined) {\n    document.body.style.paddingRight = previousBodyPaddingRight;\n\n    // Restore previousBodyPaddingRight to undefined so setOverflowHidden knows it\n    // can be set again.\n    previousBodyPaddingRight = undefined;\n  }\n\n  if (previousBodyOverflowSetting !== undefined) {\n    document.body.style.overflow = previousBodyOverflowSetting;\n\n    // Restore previousBodyOverflowSetting to undefined\n    // so setOverflowHidden knows it can be set again.\n    previousBodyOverflowSetting = undefined;\n  }\n};\n\n// https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollHeight#Problems_and_solutions\nvar isTargetElementTotallyScrolled = function isTargetElementTotallyScrolled(targetElement) {\n  return targetElement ? targetElement.scrollHeight - targetElement.scrollTop <= targetElement.clientHeight : false;\n};\n\nvar handleScroll = function handleScroll(event, targetElement) {\n  var clientY = event.targetTouches[0].clientY - initialClientY;\n\n  if (allowTouchMove(event.target)) {\n    return false;\n  }\n\n  if (targetElement && targetElement.scrollTop === 0 && clientY > 0) {\n    // element is at the top of its scroll.\n    return preventDefault(event);\n  }\n\n  if (isTargetElementTotallyScrolled(targetElement) && clientY < 0) {\n    // element is at the bottom of its scroll.\n    return preventDefault(event);\n  }\n\n  event.stopPropagation();\n  return true;\n};\n\nexport var disableBodyScroll = function disableBodyScroll(targetElement, options) {\n  // targetElement must be provided\n  if (!targetElement) {\n    // eslint-disable-next-line no-console\n    console.error('disableBodyScroll unsuccessful - targetElement must be provided when calling disableBodyScroll on IOS devices.');\n    return;\n  }\n\n  // disableBodyScroll must not have been called on this targetElement before\n  if (locks.some(function (lock) {\n    return lock.targetElement === targetElement;\n  })) {\n    return;\n  }\n\n  var lock = {\n    targetElement: targetElement,\n    options: options || {}\n  };\n\n  locks = [].concat(_toConsumableArray(locks), [lock]);\n\n  if (isIosDevice) {\n    targetElement.ontouchstart = function (event) {\n      if (event.targetTouches.length === 1) {\n        // detect single touch.\n        initialClientY = event.targetTouches[0].clientY;\n      }\n    };\n    targetElement.ontouchmove = function (event) {\n      if (event.targetTouches.length === 1) {\n        // detect single touch.\n        handleScroll(event, targetElement);\n      }\n    };\n\n    if (!documentListenerAdded) {\n      document.addEventListener('touchmove', preventDefault, hasPassiveEvents ? { passive: false } : undefined);\n      documentListenerAdded = true;\n    }\n  } else {\n    setOverflowHidden(options);\n  }\n};\n\nexport var clearAllBodyScrollLocks = function clearAllBodyScrollLocks() {\n  if (isIosDevice) {\n    // Clear all locks ontouchstart/ontouchmove handlers, and the references.\n    locks.forEach(function (lock) {\n      lock.targetElement.ontouchstart = null;\n      lock.targetElement.ontouchmove = null;\n    });\n\n    if (documentListenerAdded) {\n      document.removeEventListener('touchmove', preventDefault, hasPassiveEvents ? { passive: false } : undefined);\n      documentListenerAdded = false;\n    }\n\n    // Reset initial clientY.\n    initialClientY = -1;\n  } else {\n    restoreOverflowSetting();\n  }\n\n  locks = [];\n};\n\nexport var enableBodyScroll = function enableBodyScroll(targetElement) {\n  if (!targetElement) {\n    // eslint-disable-next-line no-console\n    console.error('enableBodyScroll unsuccessful - targetElement must be provided when calling enableBodyScroll on IOS devices.');\n    return;\n  }\n\n  locks = locks.filter(function (lock) {\n    return lock.targetElement !== targetElement;\n  });\n\n  if (isIosDevice) {\n    targetElement.ontouchstart = null;\n    targetElement.ontouchmove = null;\n\n    if (documentListenerAdded && locks.length === 0) {\n      document.removeEventListener('touchmove', preventDefault, hasPassiveEvents ? { passive: false } : undefined);\n      documentListenerAdded = false;\n    }\n  } else if (!locks.length) {\n    restoreOverflowSetting();\n  }\n};\n\n","import u from \"react\";\nfunction s(c = null) {\n  let [e, f] = u.useState(c);\n  const { current: r } = u.useRef({\n    current: e\n  });\n  return Object.defineProperty(r, \"current\", {\n    get: () => e,\n    set: (t) => {\n      Object.is(e, t) || (e = t, f(t));\n    }\n  }), r;\n}\nexport {\n  s as default,\n  s as useStatefulRef\n};\n","import React from 'react';\nimport cx from 'classnames';\n\ninterface CloseIconProps {\n  id?: string;\n  closeIcon?: React.ReactNode;\n  styles?: {\n    closeButton?: React.CSSProperties;\n    closeIcon?: React.CSSProperties;\n  };\n  classNames?: {\n    closeButton?: string;\n    closeIcon?: string;\n  };\n  classes: {\n    closeButton?: string;\n  };\n  onClick: () => void;\n}\n\nconst CloseIcon = ({\n  classes,\n  classNames,\n  styles,\n  id,\n  closeIcon,\n  onClick,\n}: CloseIconProps) => (\n  <button\n    id={id}\n    className={cx(classes.closeButton, classNames?.closeButton)}\n    style={styles?.closeButton}\n    onClick={onClick}\n    data-testid=\"close-button\"\n  >\n    {closeIcon ? (\n      closeIcon\n    ) : (\n      <svg\n        className={classNames?.closeIcon}\n        style={styles?.closeIcon}\n        width={28}\n        height={28}\n        viewBox=\"0 0 36 36\"\n        data-testid=\"close-icon\"\n      >\n        <path d=\"M28.5 9.62L26.38 7.5 18 15.88 9.62 7.5 7.5 9.62 15.88 18 7.5 26.38l2.12 2.12L18 20.12l8.38 8.38 2.12-2.12L20.12 18z\" />\n      </svg>\n    )}\n  </button>\n);\n\nexport default CloseIcon;\n","import { useStatefulRef as r } from \"@bedrock-layout/use-stateful-ref\";\nimport s, { useRef as c } from \"react\";\nfunction o(t, u = { isStateful: !0 }) {\n  const n = r(null), f = c(null), e = u.isStateful ? n : f;\n  return s.useEffect(() => {\n    !t || (typeof t == \"function\" ? t(e.current) : t.current = e.current);\n  }), e;\n}\nexport {\n  o as default,\n  o as useForwardedRef\n};\n","/**\n * @summary SDK\n * @memberOf SDK\n */\nclass QualifierValue {\n    /**\n     *\n     * @param {QualifierValue | QualifierValue[] | any[] | string | number}qualifierValue\n     */\n    constructor(qualifierValue) {\n        this.values = [];\n        this.delimiter = ':'; // {value}{delimiter}{value}...\n        if (this.hasValue(qualifierValue)) {\n            this.addValue(qualifierValue);\n        }\n    }\n    /**\n     * @description Joins the provided values with the provided delimiter\n     */\n    toString() {\n        return this.values.join(this.delimiter);\n    }\n    /**\n     * @description Checks if the provided argument has a value\n     * @param {any} v\n     * @private\n     * @return {boolean}\n     */\n    hasValue(v) {\n        return typeof v !== 'undefined' && v !== null && v !== '';\n    }\n    /**\n     * @desc Adds a value for the this qualifier instance\n     * @param {any} value\n     * @return {this}\n     */\n    addValue(value) {\n        // Append value or array of values\n        if (Array.isArray(value)) {\n            this.values = this.values.concat(value);\n        }\n        else {\n            this.values.push(value);\n        }\n        // Remove falsy values\n        this.values = this.values.filter((v) => this.hasValue(v));\n        return this;\n    }\n    /**\n     * @description Sets the delimiter for this instance\n     * @param delimiter\n     */\n    setDelimiter(delimiter) {\n        this.delimiter = delimiter;\n        return this;\n    }\n}\nexport { QualifierValue };\n","class UnsupportedError extends Error {\n    constructor(message = 'Unsupported') {\n        super(message);\n    }\n}\n/**\n * Creates a new UnsupportedError\n * @param message\n */\nfunction createUnsupportedError(message) {\n    return new UnsupportedError(message);\n}\nexport { UnsupportedError, createUnsupportedError };\n","import { createUnsupportedError } from \"../utils/unsupportedError.js\";\n/**\n * Returns the action's model\n */\nexport function qualifierToJson() {\n    return this._qualifierModel || { error: createUnsupportedError(`unsupported qualifier ${this.constructor.name}`) };\n}\n","import { qualifierToJson } from \"./qualifierToJson.js\";\nexport class QualifierModel {\n    constructor() {\n        this._qualifierModel = {};\n    }\n    toJson() {\n        return qualifierToJson.apply(this);\n    }\n}\n","import { QualifierValue } from './QualifierValue.js';\nimport { QualifierModel } from '../models/QualifierModel.js';\n/**\n * @summary SDK\n * @memberOf SDK\n */\nclass Qualifier extends QualifierModel {\n    constructor(key, qualifierValue) {\n        super();\n        this.delimiter = '_'; // {key}{delimiter}{qualifierValue}\n        this.key = key;\n        if (qualifierValue instanceof QualifierValue) {\n            this.qualifierValue = qualifierValue;\n        }\n        else {\n            this.qualifierValue = new QualifierValue();\n            this.qualifierValue.addValue(qualifierValue);\n        }\n    }\n    toString() {\n        const { key, delimiter, qualifierValue } = this;\n        return `${key}${delimiter}${qualifierValue.toString()}`;\n    }\n    addValue(value) {\n        this.qualifierValue.addValue(value);\n        return this;\n    }\n}\nexport { Qualifier };\n","import { QualifierValue } from \"../../internal/qualifier/QualifierValue.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\n/**\n * @memberOf Qualifiers.Flag\n * @extends {SDK.Qualifier}\n * @description the FlagQualifier class\n */\nclass FlagQualifier extends Qualifier {\n    constructor(flagType, flagValue) {\n        let qualifierValue;\n        if (flagValue) {\n            qualifierValue = new QualifierValue([flagType, `${flagValue}`]).setDelimiter(':');\n        }\n        else {\n            qualifierValue = flagType;\n        }\n        super('fl', qualifierValue);\n        this.flagValue = flagValue;\n    }\n    toString() {\n        return super.toString().replace(/\\./, '%2E');\n    }\n    getFlagValue() {\n        return this.flagValue;\n    }\n}\nexport { FlagQualifier };\n","import { createUnsupportedError } from \"../utils/unsupportedError.js\";\n/**\n * Returns the action's model\n */\nexport function actionToJson() {\n    var _a, _b, _c;\n    const actionModelIsNotEmpty = this._actionModel && Object.keys(this._actionModel).length;\n    const sourceTransformationError = (_c = (_b = (_a = this._actionModel) === null || _a === void 0 ? void 0 : _a.source) === null || _b === void 0 ? void 0 : _b.transformation) === null || _c === void 0 ? void 0 : _c.error;\n    // Should return error when there is unsupported transformation inside\n    if (sourceTransformationError && sourceTransformationError instanceof Error) {\n        return { error: sourceTransformationError };\n    }\n    if (actionModelIsNotEmpty) {\n        return this._actionModel;\n    }\n    return { error: createUnsupportedError(`unsupported action ${this.constructor.name}`) };\n}\n","import { actionToJson } from \"./actionToJson.js\";\nexport class ActionModel {\n    constructor() {\n        this._actionModel = {};\n    }\n    toJson() {\n        return actionToJson.apply(this);\n    }\n}\n","import { FlagQualifier } from \"../qualifiers/flag/FlagQualifier.js\";\nimport { Qualifier } from \"./qualifier/Qualifier.js\";\nimport { mapToSortedArray } from \"./utils/dataStructureUtils.js\";\nimport { ActionModel } from \"./models/ActionModel.js\";\n/**\n * @summary SDK\n * @memberOf SDK\n * @description Defines the category of transformation to perform.\n */\nclass Action extends ActionModel {\n    constructor() {\n        super(...arguments);\n        // We're using map, to overwrite existing keys. for example:\n        // addParam(w_100).addQualifier(w_200) should result in w_200. and not w_100,w_200\n        this.qualifiers = new Map();\n        // Unlike regular qualifiers, there can be multiple flags in each url component /fl_1,fl_2/\n        // If the falgs are added to the qualifiers map, only a single flag could exist in a component (it's a map)\n        // So flags are stored separately until the very end because of that reason\n        this.flags = [];\n        this.delimiter = ','; // {qualifier}{delimiter}{qualifier} for example: `${'w_100'}${','}${'c_fill'}`\n        this.actionTag = ''; // A custom name tag to identify this action in the future\n    }\n    prepareQualifiers() { }\n    /**\n     * @description Returns the custom name tag that was given to this action\n     * @return {string}\n     */\n    getActionTag() {\n        return this.actionTag;\n    }\n    /**\n     * @description Sets the custom name tag for this action\n     * @return {this}\n     */\n    setActionTag(tag) {\n        this.actionTag = tag;\n        return this;\n    }\n    /**\n     * @description Calls toString() on all child qualifiers (implicitly by using .join()).\n     * @return {string}\n     */\n    toString() {\n        this.prepareQualifiers();\n        return mapToSortedArray(this.qualifiers, this.flags).join(this.delimiter);\n    }\n    /**\n     * @description Adds the parameter to the action.\n     * @param {SDK.Qualifier} qualifier\n     * @return {this}\n     */\n    addQualifier(qualifier) {\n        // if string, find the key and value\n        if (typeof qualifier === 'string') {\n            const [key, value] = qualifier.toLowerCase().split('_');\n            if (key === 'fl') {\n                // if string qualifier is a flag, store it in the flags arrays\n                this.flags.push(new FlagQualifier(value));\n            }\n            else {\n                // if the string qualifier is not a flag, create a new qualifier from it\n                this.qualifiers.set(key, new Qualifier(key, value));\n            }\n        }\n        else {\n            // if a qualifier object, insert to the qualifiers map\n            this.qualifiers.set(qualifier.key, qualifier);\n        }\n        return this;\n    }\n    /**\n     * @description Adds a flag to the current action.\n     * @param {Qualifiers.Flag} flag\n     * @return {this}\n     */\n    addFlag(flag) {\n        if (typeof flag === 'string') {\n            this.flags.push(new FlagQualifier(flag));\n        }\n        else {\n            if (flag instanceof FlagQualifier) {\n                this.flags.push(flag);\n            }\n        }\n        return this;\n    }\n    addValueToQualifier(qualifierKey, qualifierValue) {\n        this.qualifiers.get(qualifierKey).addValue(qualifierValue);\n        return this;\n    }\n}\nexport { Action };\n","/**\n * Sort a map by key\n * @private\n * @param map <string, any>\n * @Return array of map's values sorted by key\n */\nfunction mapToSortedArray(map, flags) {\n    const array = Array.from(map.entries());\n    // objects from the Array.from() method above are stored in array of arrays:\n    // [[qualifierKey, QualifierObj], [qualifierKey, QualifierObj]]\n    // Flags is an array of FlagQualifierObj\n    // We need to convert it to the same form: [flagQualifier] =>  ['fl', flagQualifier]\n    flags.forEach((flag) => {\n        array.push(['fl', flag]); // push ['fl', flagQualifier]\n    });\n    return array.sort().map((v) => v[1]);\n}\n/**\n * Checks if `value` is a string.\n * @private\n * @param {*} value The value to check.\n * @return {boolean} `true` if `value` is a string, else `false`.\n */\nfunction isString(value) {\n    return (typeof value === 'string' || value instanceof String);\n}\nexport { isString, mapToSortedArray };\n","import { Action } from \"../../../internal/Action.js\";\nimport { QualifierValue } from \"../../../internal/qualifier/QualifierValue.js\";\nimport { Qualifier } from \"../../../internal/qualifier/Qualifier.js\";\n/**\n * @extends SDK.Action\n * @description A class for background transformations.\n */\nclass BackgroundColor extends Action {\n    constructor(color) {\n        super();\n        this.addQualifier(new Qualifier('b', new QualifierValue(color).setDelimiter('_')));\n    }\n}\nexport { BackgroundColor };\n","import { createUnsupportedError } from \"./utils/unsupportedError.js\";\n/**\n * @summary SDK\n * @memberOf SDK\n * @description Defines an action that's a string literal, no validations or manipulations are performed\n */\nclass RawAction {\n    constructor(raw) {\n        this.raw = raw;\n    }\n    toString() {\n        return this.raw;\n    }\n    toJson() {\n        return { error: createUnsupportedError(`unsupported action ${this.constructor.name}`) };\n    }\n}\nexport { RawAction };\n","/**\n * @description Defines flags that you can use to alter the default transformation behavior.\n * @namespace Flag\n * @memberOf Qualifiers\n */\nimport { FlagQualifier } from \"./flag/FlagQualifier.js\";\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Used when delivering a video file as an image format that supports animation, such as animated WebP.\n * Plays all frames rather than just delivering the first one as a static image.\n * Use this flag in addition to the flag or parameter controlling the delivery format,\n * for example f_auto or fl_awebp.\n\n * Note: When delivering a video in GIF format, it is delivered as an animated GIF by default and this flag is not\n * necessary. To deliver a single frame of a video in GIF format, use the page parameter.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction animated() {\n    return new FlagQualifier('animated');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description When converting animated images to WebP format, generate an animated WebP from all the frames in the\n * original\n * animated file instead of only from the first still frame.\n *\n * Note that animated WebPs are not supported in all browsers and versions.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction animatedWebP() {\n    return new FlagQualifier('awebp');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description When used together with automatic quality (q_auto):\n * allow switching to PNG8 encoding if the quality algorithm decides that it's more efficient.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction anyFormat() {\n    return new FlagQualifier('any_format');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description When converting animated images to PNG format, generates an animated PNG from all the frames in the\n * original\n * animated file instead of only from the first still frame.\n *\n * Note that animated PNGs are not supported in all browsers and versions.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction animatedPng() {\n    return new FlagQualifier('apng');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Trims pixels according to a clipping path included in the original image\n * (e.g., manually created using PhotoShop).\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction clip() {\n    return new FlagQualifier('clip');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Trims pixels according to a clipping path included in the original image (e.g., manually created\n * using PhotoShop)\n * using an evenodd clipping rule.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction clipEvenOdd() {\n    return new FlagQualifier('clip_evenodd');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Instructs Cloudinary to clear all image meta-data (IPTC, Exif and XMP) while applying an incoming\n * transformation.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction forceStrip() {\n    return new FlagQualifier('force_strip');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Allows custom flag\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction custom(value) {\n    return new FlagQualifier(value);\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Adds ICC color space metadata to the image, even when the original image doesn't contain any ICC data.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction forceIcc() {\n    return new FlagQualifier('force_icc');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Delivers the image as an attachment.\n * @param {string} filename The attachment's filename\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction attachment(filename) {\n    return new FlagQualifier('attachment', filename);\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Returns metadata of the input asset and of the transformed output asset in JSON instead of the\n * transformed image.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction getInfo() {\n    return new FlagQualifier('getinfo');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Deliver an HLS adaptive bitrate streaming file as HLS v3 instead of the default version (HLS v4).\n * Delivering in this format requires a private CDN configuration.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction hlsv3() {\n    return new FlagQualifier('hlsv3');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Sets the cache-control to immutable for the asset.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction immutableCache() {\n    return new FlagQualifier('immutable_cache');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description * Allows specifying only either width or height so the value of the second axis remains as is, and is not\n * recalculated to maintain the aspect ratio of the original image.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction ignoreInitialAspectRatio() {\n    return new FlagQualifier('ignore_aspect_ratio');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Keeps the copyright related fields when stripping meta-data.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction keepAttribution() {\n    return new FlagQualifier('keep_attribution');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * Keep the Display Aspect Ratio metadata of the uploaded video (if it’s different from the current video\n * dimensions).\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction keepDar() {\n    return new FlagQualifier('keep_dar');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Keeps all meta-data.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction keepIptc() {\n    return new FlagQualifier('keep_iptc');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Applies all chained transformations, until a transformation component that includes this flag, on the last added\n * overlay or underlay instead of applying on the containing image.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction layerApply() {\n    return new FlagQualifier('layer_apply');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Automatically use lossy compression when delivering animated GIF files.\n *\n * This flag can also be used as a conditional flag for delivering PNG files: it tells Cloudinary to deliver the\n * image in PNG format (as requested) unless there is no transparency channel - in which case deliver in JPEG\n * format.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction lossy() {\n    return new FlagQualifier('lossy');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Convert the audio channel to mono\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction mono() {\n    return new FlagQualifier('mono');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Used internally by Position within an Overlay, this flag will tile the overlay across your image.\n *\n * <b>Learn more:</b> {@link https://cloudinary.com/documentation/transformation_reference#fl_no_overflow|Overflow in overlays}\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction noOverflow() {\n    return new FlagQualifier('no_overflow');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Don't stream a video that is currently being generated on the fly. Wait until the video is fully generated.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction noStream() {\n    return new FlagQualifier('no_stream');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Generate PNG images in the png24 format.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction png24() {\n    return new FlagQualifier('png24');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Generate PNG images in the png32 format.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction png32() {\n    return new FlagQualifier('png32');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Generate PNG images in the PNG8 format.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction png8() {\n    return new FlagQualifier('png8');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description When used with automatic fetch_format (f_auto): ensures that images with a transparency channel will be\n * delivered in PNG format.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction preserveTransparency() {\n    return new FlagQualifier('preserve_transparency');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Generates a JPG image using the progressive (interlaced) JPG format.\n *\n * This format allows the browser to quickly show a low-quality rendering of the image until the full-quality\n * image is loaded.\n *\n * @param {string} mode? The mode to determine a specific progressive outcome as follows:\n * * semi - A smart optimization of the decoding time, compression level and progressive rendering\n *          (less iterations). This is the default mode when using q_auto.\n * * steep - Delivers a preview very quickly, and in a single later phase improves the image to\n *           the required resolution.\n * * none  - Use this to deliver a non-progressive image. This is the default mode when setting\n *           a specific value for quality.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction progressive(mode) {\n    return new FlagQualifier('progressive', mode);\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Modifies percentage-based width & height parameters of overlays and underlays (e.g., 1.0) to be relative to the overlaid region\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction regionRelative() {\n    return new FlagQualifier('region_relative');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Reduces the image to one flat pixelated layer (as opposed to the default vector based graphic) in\n * order to enable\n * PDF resizing and overlay manipulations.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction rasterize() {\n    return new FlagQualifier('rasterize');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Modifies percentage-based width & height parameters of overlays and underlays (e.g., 1.0) to be relative to the containing image instead of the added layer.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction relative() {\n    return new FlagQualifier('relative');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Instructs Cloudinary to run a sanitizer on the image (relevant only for the SVG format).\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction sanitize() {\n    return new FlagQualifier('sanitize');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Splices the video stipulated as an overlay on to the end of the container video instead of adding it as an\n * overlay.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction splice() {\n    return new FlagQualifier('splice');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Instructs Cloudinary to clear all ICC color profile data included with the image.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction stripProfile() {\n    return new FlagQualifier('strip_profile');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description If the requested video transformation has already been generated, this flag works identically to\n * Flag::attachment.\n *\n *  However, if the video transformation is being requested for the first time, this flag causes the video download\n * to begin immediately, streaming it as a fragmented video file.\n *\n * In contrast, if the regular fl_attachment flag is used when a user requests a new video transformation,\n * the download will begin only after the complete transformed video has been generated.\n *\n * Most standard video players successfully play fragmented video files without issue.\n *\n * @param {string} filename The attachment's filename\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction streamingAttachment(filename) {\n    return new FlagQualifier('streaming_attachment', filename);\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Generates TIFF images using LZW compression and in the TIFF8 format.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction tiff8Lzw() {\n    return new FlagQualifier('tiff8_lzw');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Used internally by Position within an Overlay, this flag will tile the overlay across your image.\n *\n * <b>Learn more:</b> {@link https://cloudinary.com/documentation/layers#automatic_tiling|Tiling overlay}\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction tiled() {\n    return new FlagQualifier('tiled');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Truncate (trim) a video file based on the start time defined in the metadata (relevant only where the metadata\n * includes a directive to play only a section of the video).\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction truncateTS() {\n    return new FlagQualifier('truncate_ts');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Create a waveform image (in the format specified by the file extension) from the audio or video file.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction waveform() {\n    return new FlagQualifier('waveform');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description A qualifier that ensures that an alpha channel is not applied to a TIFF image if it is a mask channel.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction ignoreMaskChannels() {\n    return new FlagQualifier('ignore_mask_channels');\n}\nconst Flag = {\n    animated, anyFormat, animatedPng, animatedWebP,\n    clipEvenOdd, lossy, preserveTransparency, png8, png24, png32, progressive, rasterize,\n    sanitize, stripProfile, tiff8Lzw, attachment, forceIcc, forceStrip, getInfo, immutableCache,\n    keepAttribution, keepIptc, custom, streamingAttachment, hlsv3, keepDar, noStream, mono,\n    layerApply, relative, regionRelative, splice, truncateTS, waveform, ignoreInitialAspectRatio, clip,\n    tiled, noOverflow, ignoreMaskChannels\n};\nexport { Flag, animated, anyFormat, animatedPng, animatedWebP, clipEvenOdd, lossy, preserveTransparency, png8, png24, png32, progressive, rasterize, sanitize, stripProfile, tiff8Lzw, attachment, forceIcc, forceStrip, getInfo, immutableCache, keepAttribution, keepIptc, custom, streamingAttachment, hlsv3, keepDar, noStream, mono, layerApply, relative, regionRelative, splice, truncateTS, waveform, ignoreInitialAspectRatio, clip, tiled, noOverflow, ignoreMaskChannels };\n","import { QualifierValue } from \"../../internal/qualifier/QualifierValue.js\";\n/**\n * @memberOf Qualifiers.Format\n * @extends {SDK.QualifierValue}\n */\nclass FormatQualifier extends QualifierValue {\n    constructor(val) {\n        super(val);\n        this.val = val;\n    }\n    getValue() {\n        return this.val;\n    }\n}\nexport { FormatQualifier };\n","/**\n * Flip keys and values for given object\n * @param obj\n */\nfunction objectFlip(obj) {\n    const result = {};\n    Object.keys(obj).forEach((key) => {\n        result[obj[key]] = key;\n    });\n    return result;\n}\nexport { objectFlip };\n","/**\n * This file is for internal constants only.\n * It is not intended for public use and is not part of the public API\n */\nimport { objectFlip } from \"./utils/objectFlip.js\";\nexport const CONDITIONAL_OPERATORS = {\n    \"=\": \"eq\",\n    \"!=\": \"ne\",\n    \"<\": \"lt\",\n    \">\": \"gt\",\n    \"<=\": \"lte\",\n    \">=\": \"gte\",\n    \"&&\": \"and\",\n    \"||\": \"or\",\n    \"*\": \"mul\",\n    \"/\": \"div\",\n    \"+\": \"add\",\n    \"-\": \"sub\",\n    \"^\": \"pow\"\n};\nexport const RESERVED_NAMES = {\n    \"aspect_ratio\": \"ar\",\n    \"aspectRatio\": \"ar\",\n    \"current_page\": \"cp\",\n    \"currentPage\": \"cp\",\n    \"duration\": \"du\",\n    \"face_count\": \"fc\",\n    \"faceCount\": \"fc\",\n    \"height\": \"h\",\n    \"initial_aspect_ratio\": \"iar\",\n    \"initial_height\": \"ih\",\n    \"initial_width\": \"iw\",\n    \"initialAspectRatio\": \"iar\",\n    \"initialHeight\": \"ih\",\n    \"initialWidth\": \"iw\",\n    \"initial_duration\": \"idu\",\n    \"initialDuration\": \"idu\",\n    \"page_count\": \"pc\",\n    \"page_x\": \"px\",\n    \"page_y\": \"py\",\n    \"pageCount\": \"pc\",\n    \"pageX\": \"px\",\n    \"pageY\": \"py\",\n    \"tags\": \"tags\",\n    \"width\": \"w\",\n    \"trimmed_aspect_ratio\": \"tar\",\n    \"current_public_id\": \"cpi\",\n    \"initial_density\": \"idn\",\n    \"page_names\": \"pgnames\"\n};\nexport const ACTION_TYPE_TO_CROP_MODE_MAP = {\n    limitFit: 'limit',\n    limitFill: 'lfill',\n    minimumFit: 'mfit',\n    thumbnail: 'thumb',\n    limitPad: 'lpad',\n    minimumPad: 'mpad'\n};\nexport const ACTION_TYPE_TO_DELIVERY_MODE_MAP = {\n    colorSpace: 'cs',\n    dpr: 'dpr',\n    density: 'dn',\n    defaultImage: 'd',\n    format: 'f',\n    quality: 'q'\n};\nexport const ACTION_TYPE_TO_EFFECT_MODE_MAP = {\n    redEye: 'redeye',\n    advancedRedEye: 'adv_redeye',\n    oilPaint: 'oil_paint',\n    unsharpMask: 'unsharp_mask',\n    makeTransparent: 'make_transparent',\n    generativeRestore: 'gen_restore',\n    upscale: 'upscale'\n};\nexport const ACTION_TYPE_TO_QUALITY_MODE_MAP = {\n    autoBest: 'auto:best',\n    autoEco: 'auto:eco',\n    autoGood: 'auto:good',\n    autoLow: 'auto:low',\n    jpegminiHigh: 'jpegmini:1',\n    jpegminiMedium: 'jpegmini:2',\n    jpegminiBest: 'jpegmini:0'\n};\nexport const ACTION_TYPE_TO_STREAMING_PROFILE_MODE_MAP = {\n    fullHd: 'full_hd',\n    fullHdWifi: 'full_hd_wifi',\n    fullHdLean: 'full_hd_lean',\n    hdLean: 'hd_lean'\n};\nexport const CHROMA_VALUE_TO_CHROMA_MODEL_ENUM = {\n    444: \"CHROMA_444\",\n    420: \"CHROMA_420\"\n};\nexport const COLOR_SPACE_MODEL_MODE_TO_COLOR_SPACE_MODE_MAP = {\n    'noCmyk': 'no_cmyk',\n    'keepCmyk': 'keep_cmyk',\n    'tinySrgb': 'tinysrgb',\n    'srgbTrueColor': 'srgb:truecolor'\n};\nexport const ACTION_TYPE_TO_BLEND_MODE_MAP = {\n    'antiRemoval': 'anti_removal'\n};\nexport const CHROMA_MODEL_ENUM_TO_CHROMA_VALUE = objectFlip(CHROMA_VALUE_TO_CHROMA_MODEL_ENUM);\nexport const COLOR_SPACE_MODE_TO_COLOR_SPACE_MODEL_MODE_MAP = objectFlip(COLOR_SPACE_MODEL_MODE_TO_COLOR_SPACE_MODE_MAP);\nexport const CROP_MODE_TO_ACTION_TYPE_MAP = objectFlip(ACTION_TYPE_TO_CROP_MODE_MAP);\nexport const DELIVERY_MODE_TO_ACTION_TYPE_MAP = objectFlip(ACTION_TYPE_TO_DELIVERY_MODE_MAP);\nexport const EFFECT_MODE_TO_ACTION_TYPE_MAP = objectFlip(ACTION_TYPE_TO_EFFECT_MODE_MAP);\nexport const QUALITY_MODE_TO_ACTION_TYPE_MAP = objectFlip(ACTION_TYPE_TO_QUALITY_MODE_MAP);\nexport const STREAMING_PROFILE_TO_ACTION_TYPE_MAP = objectFlip(ACTION_TYPE_TO_STREAMING_PROFILE_MODE_MAP);\n","import { Action } from \"../../internal/Action.js\";\nimport { FormatQualifier } from \"../../qualifiers/format/FormatQualifier.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\nimport { DELIVERY_MODE_TO_ACTION_TYPE_MAP } from \"../../internal/internalConstants.js\";\n/**\n * @description Qualifies the delivery of an asset.\n * @memberOf Actions.Delivery\n * @extends SDK.Action\n */\nclass DeliveryAction extends Action {\n    /**\n     * @param {string} deliveryKey A generic Delivery Action Key (such as q, f, dn, etc.)\n     * @param {string} deliveryType A Format Qualifiers for the action, such as Quality.auto()\n     * @param {string} modelProperty internal model property of the action, for example quality uses `level` while dpr uses `density`\n     * @see Visit {@link Actions.Delivery|Delivery} for an example\n     */\n    constructor(deliveryKey, deliveryType, modelProperty) {\n        super();\n        this._actionModel = {};\n        let deliveryTypeValue;\n        if (deliveryType instanceof FormatQualifier) {\n            deliveryTypeValue = deliveryType.getValue();\n        }\n        else {\n            deliveryTypeValue = deliveryType;\n        }\n        this._actionModel.actionType = DELIVERY_MODE_TO_ACTION_TYPE_MAP[deliveryKey];\n        this._actionModel[modelProperty] = deliveryTypeValue;\n        this.addQualifier(new Qualifier(deliveryKey, deliveryType));\n    }\n}\nexport { DeliveryAction };\n","/**\n * @description Contains functions to select the mode when using a progressive format.\n * <b>Learn more</b>: {@link https://cloudinary.com/documentation/transformation_reference#fl_progressive|Progressive modes}\n * @memberOf Qualifiers\n * @namespace Progressive\n * @example\n * import {Cloudinary} from \"@cloudinary/url-gen\";\n * import {format} from \"@cloudinary/url-gen/actions/delivery\";\n * import {jpg} from \"@cloudinary/url-gen/qualifiers/format\";\n * import {steep} from \"@cloudinary/url-gen/qualifiers/progressive\";\n *\n * const yourCldInstance = new Cloudinary({cloud: {cloudName: 'demo'}});\n * const image = yourCldInstance.image('woman');\n * image.delivery(format(jpg()).progressive(steep()))\n */\nimport { FlagQualifier } from \"./flag/FlagQualifier.js\";\nclass ProgressiveQualifier extends FlagQualifier {\n    constructor(mode) {\n        super('progressive', mode);\n    }\n}\n/**\n * @memberOf Qualifiers.Progressive\n */\nfunction none() {\n    return new ProgressiveQualifier('none');\n}\n/**\n * @memberOf Qualifiers.Progressive\n */\nfunction semi() {\n    return new ProgressiveQualifier('semi');\n}\n/**\n * @memberOf Qualifiers.Progressive\n */\nfunction steep() {\n    return new ProgressiveQualifier('steep');\n}\n/**\n * @memberOf Qualifiers.Progressive\n */\nfunction progressive() {\n    return new ProgressiveQualifier();\n}\nconst Progressive = {\n    semi,\n    none,\n    steep,\n    progressive,\n    ProgressiveQualifier\n};\nexport { Progressive, semi, none, steep, progressive, ProgressiveQualifier };\n","import { lossy, preserveTransparency, progressive } from \"../../qualifiers/flag.js\";\nimport { DeliveryAction } from \"./DeliveryAction.js\";\nimport { ProgressiveQualifier } from \"../../qualifiers/progressive.js\";\n/**\n * @memberOf Actions.Delivery\n * @extends {Actions.Delivery.DeliveryAction}\n * @see Visit {@link Actions.Delivery|Delivery} for an example\n */\nclass DeliveryFormatAction extends DeliveryAction {\n    constructor(deliveryKey, deliveryType) {\n        super(deliveryKey, deliveryType, 'formatType');\n    }\n    /**\n     * @description Uses lossy compression when delivering animated GIF files.\n     * @return {this}\n     */\n    lossy() {\n        this._actionModel.lossy = true;\n        this.addFlag(lossy());\n        return this;\n    }\n    /**\n     * @description Uses progressive compression when delivering JPG file format.\n     * @return {this}\n     */\n    progressive(mode) {\n        if (mode instanceof ProgressiveQualifier) {\n            this._actionModel.progressive = { mode: mode.getFlagValue() };\n            this.addFlag(mode);\n        }\n        else {\n            this._actionModel.progressive = { mode: mode };\n            this.addFlag(progressive(mode));\n        }\n        return this;\n    }\n    /**\n     * @description Ensures that images with a transparency channel are delivered in PNG format.\n     */\n    preserveTransparency() {\n        this._actionModel.preserveTransparency = true;\n        this.addFlag(preserveTransparency());\n        return this;\n    }\n    static fromJson(actionModel) {\n        const { formatType, lossy, progressive, preserveTransparency } = actionModel;\n        let result;\n        if (formatType) {\n            result = new this('f', formatType);\n        }\n        else {\n            result = new this('f');\n        }\n        if (progressive) {\n            if (progressive.mode) {\n                result.progressive(progressive.mode);\n            }\n            else {\n                result.progressive();\n            }\n        }\n        lossy && result.lossy();\n        preserveTransparency && result.preserveTransparency();\n        return result;\n    }\n}\nexport { DeliveryFormatAction };\n","import { Action } from \"../internal/Action.js\";\nimport { BackgroundColor } from \"../actions/background/actions/BackgroundColor.js\";\nimport { prepareColor } from \"../internal/utils/prepareColor.js\";\nimport { FlagQualifier } from \"../qualifiers/flag/FlagQualifier.js\";\nimport { RawAction } from \"../internal/RawAction.js\";\nimport { isErrorObject } from \"../internal/models/IErrorObject.js\";\nimport { DeliveryFormatAction } from \"../actions/delivery/DeliveryFormatAction.js\";\n/**\n * @summary SDK\n * @description - Defines how to transform an asset\n * @memberOf SDK\n */\nclass Transformation {\n    constructor() {\n        this.actions = [];\n    }\n    /**\n     * @param {SDK.Action | string} action\n     * @return {this}\n     */\n    addAction(action) {\n        let actionToAdd;\n        if (typeof action === 'string') {\n            if (action.indexOf('/') >= 0) {\n                throw 'addAction cannot accept a string with a forward slash in it - /, use .addTransformation() instead';\n            }\n            else {\n                actionToAdd = new RawAction(action);\n            }\n        }\n        else {\n            actionToAdd = action;\n        }\n        this.actions.push(actionToAdd);\n        return this;\n    }\n    /**\n     * @description Allows the injection of a raw transformation as a string into the transformation, or a Transformation instance that was previously created\n     * @param {string | SDK.Transformation} tx\n     * @example\n     * import {Transformation} from \"@cloudinary/url-gen\";\n     *\n     * const transformation = new Transformation();\n     * transformation.addTransformation('w_100/w_200/w_300');\n     * @return {this}\n     */\n    addTransformation(tx) {\n        if (tx instanceof Transformation) {\n            // Concat the new actions into the existing actions\n            this.actions = this.actions.concat(tx.actions);\n        }\n        else {\n            this.actions.push(new RawAction(tx));\n        }\n        return this;\n    }\n    /**\n     * @return {string}\n     */\n    toString() {\n        return this.actions\n            .map((action) => {\n            return action.toString();\n        })\n            .filter((a) => a)\n            .join('/');\n    }\n    /**\n     * @description Delivers an animated GIF.\n     * @param {AnimatedAction} animatedAction\n     * @return {this}\n     */\n    animated(animatedAction) {\n        return this.addAction(animatedAction);\n    }\n    /**\n     * @description Adds a border around the image.\n     * @param {Border} borderAction\n     * @return {this}\n     */\n    border(borderAction) {\n        return this.addAction(borderAction);\n    }\n    /**\n     * @description Adjusts the shape of the delivered image. </br>\n     * <b>Learn more:</b> {@link https://cloudinary.com/documentation/effects_and_artistic_enhancements#distort|Shape changes and distortion effects}\n     * @param {IReshape} reshapeAction\n     * @return {this}\n     */\n    reshape(reshapeAction) {\n        return this.addAction(reshapeAction);\n    }\n    /**\n     * @description Resize the asset using provided resize action\n     * @param {ResizeSimpleAction} resizeAction\n     * @return {this}\n     */\n    resize(resizeAction) {\n        return this.addAction(resizeAction);\n    }\n    /**\n     * @desc An alias to Action Delivery.quality\n     * @param {string|number} quality\n     * @return {this}\n     */\n    quality(quality) {\n        this.addAction(new DeliveryFormatAction('q', quality));\n        return this;\n    }\n    /**\n     * @desc An alias to Action Delivery.format\n     * @param {string} format\n     * @return {this}\n     */\n    format(format) {\n        this.addAction(new DeliveryFormatAction('f', format));\n        return this;\n    }\n    /**\n     * @description Rounds the specified corners of an image.\n     * @param roundCornersAction\n     * @return {this}\n     */\n    roundCorners(roundCornersAction) {\n        return this.addAction(roundCornersAction);\n    }\n    /**\n     * @description Adds an overlay over the base image.\n     * @param {LayerAction} overlayAction\n     * @return {this}\n     */\n    overlay(overlayAction) {\n        return this.addAction(overlayAction);\n    }\n    /**\n     * @description Adds an underlay under the base image.\n     * @param {LayerAction} underlayAction\n     * @return {this}\n     */\n    underlay(underlayAction) {\n        underlayAction.setLayerType('u');\n        return this.addAction(underlayAction);\n    }\n    /**\n     * @description Defines an new user variable.\n     * @param {VariableAction} variableAction\n     * @return {this}\n     */\n    addVariable(variableAction) {\n        return this.addAction(variableAction);\n    }\n    /**\n     * @description Specifies a condition to be met before applying a transformation.\n     * @param {ConditionalAction} conditionAction\n     * @return {this}\n     */\n    conditional(conditionAction) {\n        return this.addAction(conditionAction);\n    }\n    /**\n     * @description Applies a filter or an effect on an asset.\n     * @param {SimpleEffectAction} effectAction\n     * @return {this}\n     */\n    effect(effectAction) {\n        return this.addAction(effectAction);\n    }\n    /**\n     * @description Applies adjustment effect on an asset.\n     * @param action\n     * @return {this}\n     */\n    adjust(action) {\n        return this.addAction(action);\n    }\n    /**\n     * @description Rotates the asset by the given angle.\n     * @param {RotateAction} rotateAction\n     * @return {this}\n     */\n    rotate(rotateAction) {\n        return this.addAction(rotateAction);\n    }\n    /**\n     * @description Applies a pre-defined named transformation of the given name.\n     * @param {NamedTransformation} namedTransformation\n     * @return {this}\n     */\n    namedTransformation(namedTransformation) {\n        return this.addAction(namedTransformation);\n    }\n    /**\n     * @description Applies delivery action.\n     * @param deliveryAction\n     * @return {this}\n     */\n    delivery(deliveryAction) {\n        return this.addAction(deliveryAction);\n    }\n    /**\n     * @description Sets the color of the background.\n     * @param {Qualifiers.Color} color\n     * @return {this}\n     */\n    backgroundColor(color) {\n        return this.addAction(new BackgroundColor(prepareColor(color)));\n    }\n    /**\n     * @description Adds a layer in a Photoshop document.\n     * @param action\n     * @return {this}\n     */\n    psdTools(action) {\n        return this.addAction(action);\n    }\n    /**\n     * @description Extracts an image or a page using an index, a range, or a name from a layered media asset.\n     * @param action\n     * @return {this}\n     */\n    extract(action) {\n        return this.addAction(action);\n    }\n    /**\n     * @description Adds a flag as a separate action.\n     * @param {Qualifiers.Flag | string} flagQualifier\n     * @return {this}\n     */\n    addFlag(flagQualifier) {\n        const action = new Action();\n        let flagToAdd = flagQualifier;\n        if (typeof flagQualifier === 'string') {\n            flagToAdd = new FlagQualifier(flagQualifier);\n        }\n        action.addQualifier(flagToAdd);\n        return this.addAction(action);\n    }\n    /**\n     * @description Inject a custom function into the image transformation pipeline.\n     * @return {this}\n     */\n    customFunction(customFunction) {\n        return this.addAction(customFunction);\n    }\n    /**\n     * Transcodes the video (or audio) to another format.\n     * @param {Action} action\n     * @return {this}\n     */\n    transcode(action) {\n        return this.addAction(action);\n    }\n    /**\n     * Applies the specified video edit action.\n     *\n     * @param {videoEditType} action\n     * @return {this}\n     */\n    videoEdit(action) {\n        return this.addAction(action);\n    }\n    toJson() {\n        const actions = [];\n        for (const action of this.actions) {\n            const json = action.toJson();\n            if (isErrorObject(json)) {\n                // Fail early and return an IErrorObject\n                return json;\n            }\n            actions.push(json);\n        }\n        return { actions };\n    }\n}\nexport { Transformation };\n","/**\n * Returns RGB or Color\n * @private\n * @param color\n */\nexport function prepareColor(color) {\n    if (color) {\n        return color.match(/^#/) ? `rgb:${color.substr(1)}` : color;\n    }\n    else {\n        return color;\n    }\n}\n","/**\n * Validates obj is an instance of IErrorObject\n * @param obj\n */\nfunction isErrorObject(obj) {\n    const errorObj = obj;\n    return ('error' in errorObj) && !!errorObj.error;\n}\nexport { isErrorObject };\n","import { Transformation } from \"./Transformation.js\";\n/**\n * @summary SDK\n * @extends {SDK.Transformation}\n * @memberOf SDK\n */\nclass ImageTransformation extends Transformation {\n}\nexport { ImageTransformation };\n","/**\n * This file is for internal constants only.\n * It is not intended for public use and is not part of the public API\n */\n/**\n * @private\n */\nexport const ALLOWED_URL_CONFIG = [\n    'cname',\n    'secureDistribution',\n    'privateCdn',\n    'signUrl',\n    'longUrlSignature',\n    'shorten',\n    'useRootPath',\n    'secure',\n    'forceVersion',\n    'analytics',\n    'queryParams'\n];\n/**\n * @private\n */\nexport const ALLOWED_CLOUD_CONFIG = [\n    'cloudName',\n    'apiKey',\n    'apiSecret',\n    'authToken'\n];\n","import Config from \"./BaseConfig.js\";\nimport { ALLOWED_URL_CONFIG } from \"../internal/internalConstants.js\";\nclass URLConfig extends Config {\n    /**\n     * @param {IURLConfig} userURLConfig\n     */\n    constructor(userURLConfig) {\n        super();\n        const urlConfig = this.filterOutNonSupportedKeys(userURLConfig, ALLOWED_URL_CONFIG);\n        Object.assign(this, {\n            secure: true\n        }, urlConfig);\n    }\n    extend(userURLConfig) {\n        const urlConfig = this.filterOutNonSupportedKeys(userURLConfig, ALLOWED_URL_CONFIG);\n        return new URLConfig(Object.assign({}, this, urlConfig));\n    }\n    /**\n     * @param {string} value Sets the cname\n     */\n    setCname(value) {\n        this.cname = value;\n        return this;\n    }\n    /**\n     * @param {string} value Sets the secureDistribution\n     */\n    setSecureDistribution(value) {\n        this.secureDistribution = value;\n        return this;\n    }\n    /**\n     * @param {boolean} value Sets whether to use a private CDN (Removes cloudName from URL)\n     */\n    setPrivateCdn(value) {\n        this.privateCdn = value;\n        return this;\n    }\n    /**\n     * @param value Sets whether or not to sign the URL\n     */\n    setSignUrl(value) {\n        this.signUrl = value;\n        return this;\n    }\n    /**\n     * @param value Sets whether or not to use a long signature\n     */\n    setLongUrlSignature(value) {\n        this.longUrlSignature = value;\n        return this;\n    }\n    /**\n     * @param value Sets whether or not to shorten the URL\n     */\n    setShorten(value) {\n        this.shorten = value;\n        return this;\n    }\n    /**\n     * @param value Sets whether or not to use a root path\n     */\n    setUseRootPath(value) {\n        this.useRootPath = value;\n        return this;\n    }\n    /**\n     * @param value Sets whether or not to deliver the asset through https\n     */\n    setSecure(value) {\n        this.secure = value;\n        return this;\n    }\n    /**\n     * @param value Sets whether to force a version in the URL\n     */\n    setForceVersion(value) {\n        this.forceVersion = value;\n        return this;\n    }\n    /**\n     * @param params Sets additional params\n     */\n    setQueryParams(params) {\n        this.queryParams = params;\n        return this;\n    }\n}\nexport default URLConfig;\n","/**\n *\n * @private\n * @param {any} a\n */\nfunction isObject(a) {\n    if (typeof a !== 'object' || a instanceof Array) {\n        return false;\n    }\n    else {\n        return true;\n    }\n}\nclass Config {\n    filterOutNonSupportedKeys(userProvidedConfig, validKeys) {\n        const obj = Object.create({});\n        if (isObject(userProvidedConfig)) {\n            Object.keys(userProvidedConfig).forEach((key) => {\n                if (validKeys.indexOf(key) >= 0) {\n                    obj[key] = userProvidedConfig[key];\n                }\n                else {\n                    console.warn('Warning - unsupported key provided to configuration: ', key);\n                }\n            });\n            return obj;\n        }\n        else {\n            return Object.create({});\n        }\n    }\n}\nexport default Config;\n","/**\n * @private\n * @description Adds left padding to a string with the desired substring the provided number of times\n * @example stringPad(foo, 3, 'a'') // -> aaafoo\n * @param {string} value\n * @param {number} _targetLength\n * @param {string} _padString\n */\nexport function stringPad(value, _targetLength, _padString) {\n    let targetLength = _targetLength >> 0; //truncate if number or convert non-number to 0;\n    let padString = String((typeof _padString !== 'undefined' ? _padString : ' '));\n    if (value.length > targetLength) {\n        return String(value);\n    }\n    else {\n        targetLength = targetLength - value.length;\n        if (targetLength > padString.length) {\n            padString += repeatStringNumTimes(padString, targetLength / padString.length);\n        }\n        return padString.slice(0, targetLength) + String(value);\n    }\n}\n/**\n * @description Repeat a string multiple times, cross-browser-safe alternative to string.repeat()\n * @param string\n * @param _times\n */\nfunction repeatStringNumTimes(string, _times) {\n    let times = _times;\n    let repeatedString = \"\";\n    while (times > 0) {\n        repeatedString += string;\n        times--;\n    }\n    return repeatedString;\n}\n","import { stringPad } from \"./stringPad.js\";\n/**\n * This file maps sequences of 6 bit binary digits to a character in base64.\n * 000000 -> A\n * 110011 -> Z\n * 111111 -> /\n */\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\nconst base64Map = {};\nlet num = 0;\nchars.split('').forEach((char) => {\n    let key = num.toString(2);\n    key = stringPad(key, 6, '0');\n    base64Map[key] = char;\n    num++;\n});\n/**\n * Map of [six-bit binary codes] -> [Base64 characters]\n */\nexport { base64Map };\n","import { base64Map } from \"./base64Map.js\";\nimport { stringPad } from \"./stringPad.js\";\nimport { reverseVersion } from \"./reverseVersion.js\";\n/**\n * @private\n * @description Encodes a semVer-like version string\n * @param {string} semVer Input can be either x.y.z or x.y\n * @return {string} A string built from 3 characters of the base64 table that encode the semVer\n */\nexport function encodeVersion(semVer) {\n    let strResult = '';\n    // support x.y or x.y.z by using 'parts' as a variable\n    const parts = semVer.split('.').length;\n    const paddedStringLength = parts * 6; // we pad to either 12 or 18 characters\n    // reverse (but don't mirror) the version. 1.5.15 -> 15.5.1\n    // Pad to two spaces, 15.5.1 -> 15.05.01\n    const paddedReversedSemver = reverseVersion(semVer);\n    // turn 15.05.01 to a string '150501' then to a number 150501\n    const num = parseInt(paddedReversedSemver.split('.').join(''));\n    // Represent as binary, add left padding to 12 or 18 characters.\n    // 150,501 -> 100100101111100101\n    let paddedBinary = num.toString(2);\n    paddedBinary = stringPad(paddedBinary, paddedStringLength, '0');\n    // Stop in case an invalid version number was provided\n    // paddedBinary must be built from sections of 6 bits\n    if (paddedBinary.length % 6 !== 0) {\n        throw 'Version must be smaller than 43.21.26)';\n    }\n    // turn every 6 bits into a character using the base64Map\n    paddedBinary.match(/.{1,6}/g).forEach((bitString) => {\n        // console.log(bitString);\n        strResult += base64Map[bitString];\n    });\n    return strResult;\n}\n","import { stringPad } from \"./stringPad.js\";\n/**\n * @private\n * @description Reverses the version positions, x.y.z turns to z.y.x\n *              Pads each segment with '0' so they have length of 2\n *              Example: 1.2.3 -> 03.02.01\n * @param {string} semVer Input can be either x.y.z or x.y\n * @return {string} in the form of zz.yy.xx (\n */\nexport function reverseVersion(semVer) {\n    if (semVer.split('.').length < 2) {\n        throw new Error('invalid semVer, must have at least two segments');\n    }\n    // Split by '.', reverse, create new array with padded values and concat it together\n    return semVer.split('.').reverse().map((segment) => {\n        // try to cast to number\n        const asNumber = +segment;\n        if (isNaN(asNumber) || asNumber < 0) {\n            throw 'Invalid version number provided';\n        }\n        return stringPad(segment, 2, '0');\n    }).join('.');\n}\n","import { encodeVersion } from \"./encodeVersion.js\";\nimport { getAnalyticsOptions } from \"./getAnalyticsOptions.js\";\nimport { packageVersion } from \"../internal/utils/packageVersion.js\";\n/**\n * @private\n * @description Try to get the node version out of process, if browser just return 0.0.0\n */\nfunction getNodeVersion() {\n    const failedVersion = '0.0.0';\n    if (typeof window !== 'undefined') {\n        return failedVersion;\n    }\n    else {\n        // node env\n        try {\n            return process.versions.node || failedVersion;\n        }\n        catch (e) {\n            return failedVersion;\n        }\n    }\n}\n/**\n * @private\n * @description Ensure that all values ITrackedPropertiesThroughAnalytics are populated.\n * Accept a partial map of values and returns the complete interface of ITrackedPropertiesThroughAnalytics\n * @param {ITrackedPropertiesThroughAnalytics} trackedAnalytics\n * @param {ITrackedPropertiesThroughAnalytics} trackedAnalytics\n */\nfunction ensureShapeOfTrackedProperties(trackedAnalytics) {\n    // try to get the process version from node, but if we're on the client return 0.0.0\n    const defaults = {\n        techVersion: getNodeVersion(),\n        sdkCode: 'T',\n        sdkSemver: packageVersion.split('-')[0],\n        product: 'A',\n        responsive: false,\n        placeholder: false,\n        lazyload: false,\n        accessibility: false\n    };\n    if (!trackedAnalytics) {\n        return defaults;\n    }\n    else {\n        return Object.assign(Object.assign({}, defaults), trackedAnalytics);\n    }\n}\n/**\n * @private\n * @description Creates the complete SDK signature by using all the values provided by ITrackedPropertiesThroughAnalytics\n *              Creation of the signature\n *              - Set the AlgoVersion of the encoding, this is an internal letter that represents the version\n *                of our encoding algorithm, it will allow us to perform breaking changes if we'll need them.\n *              - Take the constant SDK code (Arbitrary letter chosen for each SDK, for Base that letter is 'T')\n *                this is used to tell apart which SDK is being tracked.\n *              - Take the {major.minor} versions of the node version (techVersion) (14.2, 16.2 etc.)\n *              - Take the full semver of the SDK you wish to track\n *              - Take the features used(lazy, placeholder etc.) and turn them to a letter (for example accessibility -> D)\n *              - Before appending the string, the Versions must be encoded, see the function `encodeVersion` for more details\n *              - Append all the variables to a single string\n *              - In any case of an error, return the single letter 'E'\n *\n * @return {string} sdkAnalyticsSignature\n */\nexport function getSDKAnalyticsSignature(_trackedAnalytics) {\n    const trackedAnalytics = ensureShapeOfTrackedProperties(_trackedAnalytics);\n    const analyticsOptions = getAnalyticsOptions(trackedAnalytics);\n    try {\n        const twoPartVersion = removePatchFromSemver(analyticsOptions.techVersion);\n        const encodedSDKVersion = encodeVersion(analyticsOptions.sdkSemver);\n        const encodedTechVersion = encodeVersion(twoPartVersion);\n        const featureCode = analyticsOptions.feature;\n        const SDKCode = analyticsOptions.sdkCode;\n        const product = analyticsOptions.product;\n        const algoVersion = 'B'; // The algo version is determined here, it should not be an argument\n        return `${algoVersion}${product}${SDKCode}${encodedSDKVersion}${encodedTechVersion}${featureCode}`;\n    }\n    catch (e) {\n        // Either SDK or Node versions were unparsable\n        return 'E';\n    }\n}\n/**\n * @private\n * @description Removes patch version from the semver if it exists\n *              Turns x.y.z OR x.y into x.y\n * @param {'x.y.z' | 'x.y' | string} semVerStr\n */\nfunction removePatchFromSemver(semVerStr) {\n    const parts = semVerStr.split('.');\n    return `${parts[0]}.${parts[1]}`;\n}\n","/**\n * @private\n * @description Gets the analyticsOptions from options- should include sdkSemver, techVersion, sdkCode, and feature\n * @param {ITrackedPropertiesThroughAnalytics} options\n * @returns {IAnalyticsOptions}\n */\nexport function getAnalyticsOptions(options) {\n    const analyticsOptions = {\n        sdkSemver: options.sdkSemver,\n        techVersion: options.techVersion,\n        sdkCode: options.sdkCode,\n        product: options.product,\n        feature: '0',\n    };\n    if (options.accessibility) {\n        analyticsOptions.feature = 'D';\n    }\n    if (options.lazyload) {\n        analyticsOptions.feature = 'C';\n    }\n    if (options.responsive) {\n        analyticsOptions.feature = 'A';\n    }\n    if (options.placeholder) {\n        analyticsOptions.feature = 'B';\n    }\n    return analyticsOptions;\n}\n","const packageVersion = '1.14.0';\n/**\n * Export package version (injected during our build).\n * Reason for this is that If we import values from from package.json,\n * it will cause an error for users who do not have an 'import from json' plugin\n * as part of their build process / bundler.\n */\nexport { packageVersion };\n","import { getUrlPrefix, getUrlVersion, handleAssetType, handleDeliveryType } from \"../internal/url/cloudinaryURL.js\";\nimport URLConfig from \"../config/URLConfig.js\";\nimport { getSDKAnalyticsSignature } from \"../sdkAnalytics/getSDKAnalyticsSignature.js\";\n/**\n * This const contains all the valid combination of asset/delivery for URL shortening purposes\n * It's exported because it's used in a test, but it's not really shared enough to belong in a separate file\n */\nexport const SEO_TYPES = {\n    \"image/upload\": \"images\",\n    \"image/private\": \"private_images\",\n    \"image/authenticated\": \"authenticated_images\",\n    \"raw/upload\": \"files\",\n    \"video/upload\": \"videos\"\n};\n/**\n * @description Cloudinary file without a transformation\n * @summary SDK\n * @memberOf SDK\n */\nclass CloudinaryFile {\n    constructor(publicID, cloudConfig = {}, urlConfig) {\n        this.setPublicID(publicID);\n        this.setCloudConfig(cloudConfig);\n        this.setURLConfig(urlConfig);\n    }\n    /**\n     * @description Sets the URL Config for this asset\n     * @param urlConfig\n     * @return {this}\n     */\n    setURLConfig(urlConfig) {\n        this.urlConfig = new URLConfig(urlConfig);\n        return this;\n    }\n    /**\n     * @description Sets the Cloud Config for this asset\n     * @param urlConfig\n     * @return {this}\n     */\n    setCloudConfig(cloudConfig) {\n        this.cloudName = cloudConfig.cloudName;\n        this.apiKey = cloudConfig.apiKey;\n        this.apiSecret = cloudConfig.apiSecret;\n        this.authToken = cloudConfig.authToken;\n        return this;\n    }\n    /**\n     * @description Sets the public ID of the asset.\n     * @param {string} publicID The public ID of the asset.\n     * @return {this}\n     */\n    setPublicID(publicID) {\n        // PublicID must be a string!\n        this.publicID = publicID ? publicID.toString() : '';\n        return this;\n    }\n    /**\n     * @description Sets the delivery type of the asset.\n     * @param {DELIVERY_TYPE | string} newType The type of the asset.\n     * @return {this}\n     */\n    setDeliveryType(newType) {\n        this.deliveryType = newType;\n        return this;\n    }\n    /**\n     * @description Sets the URL SEO suffix of the asset.\n     * @param {string} newSuffix The SEO suffix.\n     * @return {this}\n     */\n    setSuffix(newSuffix) {\n        this.suffix = newSuffix;\n        return this;\n    }\n    /**\n     * @description Sets the signature of the asset.\n     * @param {string} signature The signature.\n     * @return {this}\n     */\n    setSignature(signature) {\n        this.signature = signature;\n        return this;\n    }\n    /**\n     * @description Sets the version of the asset.\n     * @param {string} newVersion The version of the asset.\n     * @return {this}\n     */\n    setVersion(newVersion) {\n        if (newVersion) {\n            this.version = newVersion;\n        }\n        return this;\n    }\n    /**\n     * @description Sets the asset type.\n     * @param {string} newType The type of the asset.\n     * @return {this}\n     */\n    setAssetType(newType) {\n        if (newType) {\n            this.assetType = newType;\n        }\n        return this;\n    }\n    sign() {\n        return this;\n    }\n    /**\n     * @description Serializes to URL string\n     * @param overwriteOptions\n     */\n    toURL(overwriteOptions = {}) {\n        return this.createCloudinaryURL(null, overwriteOptions.trackedAnalytics);\n    }\n    /**\n     * @description Validate various options before attempting to create a URL\n     * The function will throw in case a violation\n     * @throws Validation errors\n     */\n    validateAssetForURLCreation() {\n        if (typeof this.cloudName === 'undefined') {\n            throw 'You must supply a cloudName when initializing the asset';\n        }\n        const suffixContainsDot = this.suffix && this.suffix.indexOf('.') >= 0;\n        const suffixContainsSlash = this.suffix && this.suffix.indexOf('/') >= 0;\n        if (suffixContainsDot || suffixContainsSlash) {\n            throw '`suffix`` should not include . or /';\n        }\n    }\n    /**\n     * @description return an SEO friendly name for a combination of asset/delivery, some examples:\n     * * image/upload -> images\n     * * video/upload -> videos\n     * If no match is found, return `{asset}/{delivery}`\n     */\n    getResourceType() {\n        const assetType = handleAssetType(this.assetType);\n        const deliveryType = handleDeliveryType(this.deliveryType);\n        const hasSuffix = !!this.suffix;\n        const regularSEOType = `${assetType}/${deliveryType}`;\n        const shortSEOType = SEO_TYPES[`${assetType}/${deliveryType}`];\n        const useRootPath = this.urlConfig.useRootPath;\n        const shorten = this.urlConfig.shorten;\n        // Quick exit incase of useRootPath\n        if (useRootPath) {\n            if (regularSEOType === 'image/upload') {\n                return ''; // For image/upload we're done, just return nothing\n            }\n            else {\n                throw new Error(`useRootPath can only be used with assetType: 'image' and deliveryType: 'upload'. Provided: ${regularSEOType} instead`);\n            }\n        }\n        if (shorten && regularSEOType === 'image/upload') {\n            return 'iu';\n        }\n        if (hasSuffix) {\n            if (shortSEOType) {\n                return shortSEOType;\n            }\n            else {\n                throw new Error(`URL Suffix only supported for ${Object.keys(SEO_TYPES).join(', ')}, Provided: ${regularSEOType} instead`);\n            }\n        }\n        // If all else fails, return the regular image/upload combination (asset/delivery)\n        return regularSEOType;\n    }\n    getSignature() {\n        if (this.signature) {\n            return `s--${this.signature}--`;\n        }\n        else {\n            return '';\n        }\n    }\n    /**\n     *\n     * @description Creates a fully qualified CloudinaryURL\n     * @return {string} CloudinaryURL\n     * @throws Validation Errors\n     */\n    createCloudinaryURL(transformation, trackedAnalytics) {\n        // In accordance with the existing implementation, if no publicID exists we should return nothing.\n        if (!this.publicID) {\n            return '';\n        }\n        // Throws if some options are mis-configured\n        // See the function for more information on when it throws\n        this.validateAssetForURLCreation();\n        const prefix = getUrlPrefix(this.cloudName, this.urlConfig);\n        const transformationString = transformation ? transformation.toString() : '';\n        const version = getUrlVersion(this.publicID, this.version, this.urlConfig.forceVersion);\n        const publicID = this.publicID;\n        if (typeof transformation === 'string') {\n            const url = [prefix, this.getResourceType(), this.getSignature(), transformationString, version, publicID.replace(/,/g, '%2C'), this.suffix]\n                .filter((a) => a)\n                .join('/');\n            return url;\n        }\n        else {\n            // Avoid applying encodeURI on entire string in case where we have transformations with comma (i.e. f_auto,q_auto)\n            // Since encodeURI does not encode commas we replace commas *only* on the publicID\n            const safeURL = [\n                encodeURI(prefix),\n                this.getResourceType(),\n                this.getSignature(),\n                encodeURI(transformationString),\n                version,\n                encodeURI(publicID).replace(/,/g, '%2C'),\n                this.suffix && encodeURI(this.suffix)\n            ]\n                .filter((a) => a)\n                .join('/')\n                .replace(/\\?/g, '%3F')\n                .replace(/=/g, '%3D');\n            const shouldAddAnalytics = this.urlConfig.analytics !== false && !(publicID.includes('?'));\n            let queryParamsString = '';\n            if (typeof (this.urlConfig.queryParams) === 'object') {\n                try {\n                    const queryParams = new URLSearchParams(this.urlConfig.queryParams);\n                    if (shouldAddAnalytics) {\n                        queryParams.set(\"_a\", getSDKAnalyticsSignature(trackedAnalytics));\n                    }\n                    queryParamsString = queryParams.toString();\n                }\n                catch (err) {\n                    console.error('Error: URLSearchParams is not available so the queryParams object cannot be parsed, please try passing as an already parsed string');\n                }\n            }\n            else {\n                queryParamsString = this.urlConfig.queryParams || '';\n                if (shouldAddAnalytics) {\n                    queryParamsString += `${(queryParamsString.length > 0 ? '&' : '')}_a=${getSDKAnalyticsSignature(trackedAnalytics)}`;\n                }\n            }\n            if (queryParamsString) {\n                return `${safeURL}?${queryParamsString}`;\n            }\n            else {\n                return safeURL;\n            }\n        }\n    }\n}\nexport { CloudinaryFile };\n","import { isUrl } from \"./urlUtils/isUrl.js\";\nimport { isFileName } from \"./urlUtils/isFileName.js\";\nimport { publicIDContainsVersion } from \"./urlUtils/publicIDContainsVersion.js\";\n/**\n * Create the URL prefix for Cloudinary resources.\n * Available use cases\n * http://res.cloudinary.com/{cloudName}\n * https://res.cloudinary.com/{cloudName}\n * https://{cloudName}-res.cloudinary.com/\n * http://{domain}/${cloudName}\n * https://{domain}/${cloudName}\n * https://{domain}\n * @private\n *\n * @param {string} cloudName\n * @param {IURLConfig} urlConfig\n */\nfunction getUrlPrefix(cloudName, urlConfig) {\n    const secure = urlConfig.secure;\n    const privateCDN = urlConfig.privateCdn;\n    const cname = urlConfig.cname;\n    const secureDistribution = urlConfig.secureDistribution;\n    if (!secure && !cname) {\n        return `http://res.cloudinary.com/${cloudName}`;\n    }\n    if (secure && !secureDistribution && privateCDN) {\n        return `https://${cloudName}-res.cloudinary.com`;\n    }\n    if (secure && !secureDistribution) {\n        return `https://res.cloudinary.com/${cloudName}`;\n    }\n    if (secure && secureDistribution && privateCDN) {\n        return `https://${secureDistribution}`;\n    }\n    if (secure && secureDistribution) {\n        return `https://${secureDistribution}/${cloudName}`;\n    }\n    if (!secure && cname) {\n        return `http://${cname}/${cloudName}`;\n    }\n    else {\n        return 'ERROR';\n    }\n}\n/**\n * @private\n * @param assetType\n */\nfunction handleAssetType(assetType) {\n    //default to image\n    if (!assetType) {\n        return 'image';\n    }\n    return assetType;\n}\n/**\n * @private\n * @param deliveryType\n */\nfunction handleDeliveryType(deliveryType) {\n    //default to upload\n    if (!deliveryType) {\n        return 'upload';\n    }\n    return deliveryType;\n}\n/**\n *\n * @param {string} publicID\n * @param {number} version\n * @param {boolean} forceVersion\n */\nfunction getUrlVersion(publicID, version, forceVersion) {\n    const shouldForceVersion = forceVersion !== false;\n    if (version) {\n        return `v${version}`;\n    }\n    // In all these conditions we never force a version\n    if (publicIDContainsVersion(publicID) || isUrl(publicID) || isFileName(publicID)) {\n        return '';\n    }\n    return shouldForceVersion ? 'v1' : '';\n}\nexport { handleAssetType, getUrlVersion, handleDeliveryType, getUrlPrefix };\n","/**\n *\n * @param publicID\n */\nexport function publicIDContainsVersion(publicID) {\n    return publicID.match(/^v[0-9]+/);\n}\n","/**\n *\n * @param publicID\n */\nexport function isUrl(publicID) {\n    return publicID.match(/^https?:\\//);\n}\n","/**\n *\n * @param publicID\n */\nexport function isFileName(publicID) {\n    return publicID.indexOf('/') < 0;\n}\n","import { CloudinaryFile } from \"./CloudinaryFile.js\";\nimport { DeliveryFormatAction } from \"@cloudinary/transformation-builder-sdk/actions/delivery/DeliveryFormatAction\";\n/**\n * @desc Cloudinary Transformable interface, extended by any class that needs a Transformation Interface\n * @summary SDK\n * @memberOf SDK\n */\nclass CloudinaryTransformable extends CloudinaryFile {\n    constructor(publicID, cloudConfig, urlConfig, transformation) {\n        /* istanbul ignore next */\n        super(publicID, cloudConfig, urlConfig);\n        this.transformation = transformation;\n    }\n    /**\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n     * @param {Actions.Animated} animated\n     * @return {this}\n     */\n    animated(animated) {\n        this.transformation.animated(animated);\n        return this;\n    }\n    /**\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n     * @param {Actions.Border} border\n     * @return {this}\n     */\n    border(border) {\n        this.transformation.border(border);\n        return this;\n    }\n    /**\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n     * @param {Actions.Reshape} reshape\n     * @return {this}\n     */\n    reshape(reshape) {\n        this.transformation.reshape(reshape);\n        return this;\n    }\n    /**\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n     * @param {Actions.Resize} resize\n     * @return {this}\n     */\n    resize(resize) {\n        this.transformation.resize(resize);\n        return this;\n    }\n    /**\n     * @desc An alias to Action Delivery.quality\n     * @param {string|number} quality\n     * @return {this}\n     */\n    quality(quality) {\n        this.addAction(new DeliveryFormatAction('q', quality));\n        return this;\n    }\n    /**\n     * @desc An alias to Action Delivery.format\n     * @param {string} format\n     * @return {this}\n     */\n    format(format) {\n        this.addAction(new DeliveryFormatAction('f', format));\n        return this;\n    }\n    /**\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n     * @param {Actions.RoundCorners} roundCorners\n     * @return {this}\n     */\n    roundCorners(roundCorners) {\n        this.transformation.roundCorners(roundCorners);\n        return this;\n    }\n    /**\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n     * @return {this}\n     */\n    overlay(overlayAction) {\n        this.transformation.overlay(overlayAction);\n        return this;\n    }\n    /**\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n     * @param {Actions.Variable} variableAction\n     * @return {this}\n     */\n    addVariable(variableAction) {\n        this.transformation.addVariable(variableAction);\n        return this;\n    }\n    /**\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n     * @param {Actions.Condition} conditionalAction\n     * @return {this}\n     */\n    conditional(conditionalAction) {\n        this.transformation.conditional(conditionalAction);\n        return this;\n    }\n    /**\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n     * @param {Actions.Effect} effect\n     * @return {this}\n     */\n    effect(effect) {\n        this.transformation.effect(effect);\n        return this;\n    }\n    /**\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n     * @param {Actions.Adjust} action\n     * @return {this}\n     */\n    adjust(action) {\n        this.transformation.adjust(action);\n        return this;\n    }\n    /**\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n     * @param {Actions.Rotate} rotate\n     * @return {this}\n     */\n    rotate(rotate) {\n        this.transformation.rotate(rotate);\n        return this;\n    }\n    /**\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n     * @param {Actions.NamedTransformation} namedTransformation\n     * @return {this}\n     */\n    namedTransformation(namedTransformation) {\n        this.transformation.namedTransformation(namedTransformation);\n        return this;\n    }\n    /**\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n     * @param {Actions.Delivery} deliveryAction\n     * @return {this}\n     */\n    delivery(deliveryAction) {\n        this.transformation.delivery(deliveryAction);\n        return this;\n    }\n    /**\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n     * @param {Qualifiers.color} color\n     * @return {this}\n     */\n    backgroundColor(color) {\n        this.transformation.backgroundColor(color);\n        return this;\n    }\n    /**\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n     * @param {Actions.PSDTools} action\n     * @return {this}\n     */\n    psdTools(action) {\n        this.transformation.psdTools(action);\n        return this;\n    }\n    /**\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n     * @param {Actions.Extract} action\n     * @return {this}\n     */\n    extract(action) {\n        this.transformation.extract(action);\n        return this;\n    }\n    /**\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n     * @param {Qualifiers.Flag | string} flagQualifier\n     * @return {this}\n     */\n    addFlag(flagQualifier) {\n        this.transformation.addFlag(flagQualifier);\n        return this;\n    }\n    /**\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n     * @param {Actions.CustomFunction} customFunction\n     * @return {this}\n     */\n    customFunction(customFunction) {\n        this.transformation.customFunction(customFunction);\n        return this;\n    }\n    /**\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n     * @param {SDK.Action | string} action\n     * @return {this}\n     */\n    addAction(action) {\n        this.transformation.addAction(action);\n        return this;\n    }\n    /**\n     * @description Extend your transformation with another transformation\n     * @param { string | SDK.Transformation } tx\n     */\n    addTransformation(tx) {\n        this.transformation.addTransformation(tx);\n        return this;\n    }\n    /**\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n     * @return {string}\n     */\n    toString() {\n        return this.transformation.toString();\n    }\n    /**\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n     * @return {this}\n     */\n    underlay(underlayAction) {\n        this.transformation.underlay(underlayAction);\n        return this;\n    }\n    toURL(overwriteOptions = {}) {\n        return this.createCloudinaryURL(this.transformation, overwriteOptions === null || overwriteOptions === void 0 ? void 0 : overwriteOptions.trackedAnalytics);\n    }\n}\nexport { CloudinaryTransformable };\n","import { ImageTransformation } from \"@cloudinary/transformation-builder-sdk/transformation/ImageTransformation\";\nimport { CloudinaryTransformable } from \"./CloudinaryTransformable.js\";\n/**\n * @desc Cloudinary image asset, with image-related transformations\n * @summary SDK\n * @memberOf SDK\n */\nclass CloudinaryImage extends CloudinaryTransformable {\n    constructor(publicID, cloudConfig, urlConfig) {\n        /* istanbul ignore next */\n        super(publicID, cloudConfig, urlConfig, new ImageTransformation());\n    }\n}\nexport { CloudinaryImage };\n","import { Transformation } from \"./Transformation.js\";\n/**\n * @summary SDK\n * @extends {SDK.Transformation}\n * @memberOf SDK\n */\nclass VideoTransformation extends Transformation {\n}\nexport { VideoTransformation };\n","import { CloudinaryTransformable } from \"./CloudinaryTransformable.js\";\nimport { VideoTransformation } from \"../transformation/VideoTransformation.js\";\n/**\n * @desc Cloudinary video asset, with video-related transformations\n * @summary SDK\n * @memberOf SDK\n */\nclass CloudinaryVideo extends CloudinaryTransformable {\n    constructor(publicID, cloudConfig, urlConfig) {\n        /* istanbul ignore next */\n        super(publicID, cloudConfig, urlConfig, new VideoTransformation());\n        this.assetType = 'video';\n    }\n    /**\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n     * @param {Actions.Transcode} action\n     * @return {this}\n     */\n    transcode(action) {\n        this.transformation.transcode(action);\n        return this;\n    }\n    /**\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n     * @param {Actions.VideoEdit} action\n     * @return {this}\n     */\n    videoEdit(action) {\n        this.transformation.videoEdit(action);\n        return this;\n    }\n}\nexport { CloudinaryVideo };\n","import { CloudinaryImage } from \"../assets/CloudinaryImage.js\";\nimport { CloudinaryVideo } from \"../assets/CloudinaryVideo.js\";\nclass Cloudinary {\n    constructor(cloudinaryConfig) {\n        if (cloudinaryConfig) {\n            this.cloudinaryConfig = cloudinaryConfig;\n        }\n    }\n    image(publicID) {\n        return new CloudinaryImage(publicID, this.cloudinaryConfig.cloud, this.cloudinaryConfig.url);\n    }\n    video(publicID) {\n        return new CloudinaryVideo(publicID, this.cloudinaryConfig.cloud, this.cloudinaryConfig.url);\n    }\n    setConfig(cloudinaryConfig) {\n        this.cloudinaryConfig = cloudinaryConfig;\n        return this;\n    }\n    getConfig() {\n        return this.cloudinaryConfig;\n    }\n    extendConfig() {\n        // Future implementation\n    }\n}\nexport { Cloudinary };\n"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","includes","key","call","join","module","exports","default","hasPassiveEvents","window","passiveTestOptions","passive","addEventListener","removeEventListener","isIosDevice","navigator","platform","test","maxTouchPoints","locks","documentListenerAdded","initialClientY","previousBodyOverflowSetting","previousBodyPaddingRight","allowTouchMove","el","some","lock","options","preventDefault","rawEvent","e","event","target","touches","restoreOverflowSetting","undefined","document","body","style","paddingRight","overflow","disableBodyScroll","targetElement","concat","arr","arr2","from","_toConsumableArray","ontouchstart","targetTouches","clientY","ontouchmove","scrollTop","scrollHeight","clientHeight","isTargetElementTotallyScrolled","stopPropagation","handleScroll","_reserveScrollBarGap","reserveScrollBarGap","scrollBarGap","innerWidth","documentElement","clientWidth","setOverflowHidden","console","error","s","c","u","f","current","r","defineProperty","get","set","t","is","cx","closeButton","width","height","viewBox","d","isBrowser","candidateSelectors","isHidden","node","offsetParent","getComputedStyle","visibility","getCheckedRadio","nodes","form","checked","CloseIcon","tagName","closeIcon","type","name","radioScope","ownerDocument","radioSet","querySelectorAll","getAllTabbingElements","parentElem","currentActiveElement","activeElement","tabbableNodes","tabTrappingKey","contains","NODE_ENV","getTabindex","env","disabled","onlyTabbable","warn","allTabbingElements","firstFocusableElement","lastFocusableElement","shiftKey","focus","tabindexAttr","parseInt","getAttribute","isNaN","_document$activeEleme","matches","requestAnimationFrame","modals","modalManager","add","newModal","remove","oldModal","filter","tabIndex","modal","FocusTrap","container","handleKeyEvent","savePreviousFocus","findIndex","selector","isContentEditable","isTopModal","useModalManager","ref","open","useScrollLock","refModal","showPortal","blockScroll","oldRef","enableBodyScroll","overlay","overlayAnimationOut","modalContainer","modalContainerCenter","center","_ref$blockScroll","forwardRef","closeOnEsc","_ref$closeOnEsc","closeOnOverlayClick","_ref$closeOnOverlayCl","onClick","showCloseIcon","_ref$showCloseIcon","closeIconId","focusTrapped","_ref$focusTrapped","animationDuration","_ref$animationDuratio","role","_ref$role","Modal","ariaLabelledby","containerId","modalId","onClose","onEscKeyDown","onOverlayClick","onAnimationEnd","children","refDialog","useForwardedRef","refShouldClose","refContainer","createElement","useState","setShowPortal","handleOpen","appendChild","handleKeydown","handleClose","removeChild","keyCode","handleClickOverlay","handleModalEvent","handleAnimationEnd","containerModal","overlayAnimation","modalAnimation","ReactDom","createPortal","isStateful","n","className","animation","onMouseDown","isNotRadioOrTabbableRadio","onMouseUp","styles","modalAnimationOut","id","QualifierValue","qualifierValue","this","values","delimiter","hasValue","addValue","v","value","UnsupportedError","message","Error","createUnsupportedError","qualifierToJson","_qualifierModel","constructor","Qualifier","FlagQualifier","flagType","flagValue","setDelimiter","replace","actionToJson","_a","_b","_c","actionModelIsNotEmpty","_actionModel","keys","sourceTransformationError","source","transformation","Action","qualifiers","Map","flags","actionTag","tag","prepareQualifiers","map","array","entries","forEach","flag","sort","mapToSortedArray","qualifier","toLowerCase","split","qualifierKey","BackgroundColor","color","addQualifier","RawAction","raw","lossy","preserveTransparency","progressive","mode","FormatQualifier","val","objectFlip","obj","result","limitFit","limitFill","minimumFit","thumbnail","limitPad","minimumPad","DELIVERY_MODE_TO_ACTION_TYPE_MAP","colorSpace","dpr","density","defaultImage","format","quality","DeliveryAction","redEye","advancedRedEye","oilPaint","unsharpMask","makeTransparent","generativeRestore","upscale","autoBest","autoEco","autoGood","autoLow","jpegminiHigh","jpegminiMedium","jpegminiBest","fullHd","fullHdWifi","fullHdLean","hdLean","deliveryKey","deliveryType","modelProperty","deliveryTypeValue","getValue","actionType","ProgressiveQualifier","DeliveryFormatAction","addFlag","getFlagValue","actionModel","formatType","Transformation","actions","action","actionToAdd","indexOf","tx","a","animatedAction","addAction","borderAction","reshapeAction","resizeAction","roundCornersAction","overlayAction","underlayAction","setLayerType","variableAction","conditionAction","effectAction","rotateAction","namedTransformation","deliveryAction","match","substr","prepareColor","flagQualifier","flagToAdd","customFunction","json","toJson","ImageTransformation","ALLOWED_URL_CONFIG","URLConfig","userURLConfig","urlConfig","filterOutNonSupportedKeys","assign","secure","cname","secureDistribution","privateCdn","signUrl","longUrlSignature","shorten","useRootPath","forceVersion","params","queryParams","Config","userProvidedConfig","validKeys","create","stringPad","_targetLength","_padString","targetLength","padString","String","string","_times","times","repeatedString","repeatStringNumTimes","slice","base64Map","num","encodeVersion","semVer","strResult","paddedStringLength","paddedReversedSemver","reverse","segment","asNumber","reverseVersion","paddedBinary","bitString","char","getNodeVersion","failedVersion","process","versions","getSDKAnalyticsSignature","_trackedAnalytics","analyticsOptions","sdkSemver","techVersion","sdkCode","product","feature","accessibility","lazyload","responsive","placeholder","getAnalyticsOptions","trackedAnalytics","defaults","ensureShapeOfTrackedProperties","twoPartVersion","semVerStr","parts","removePatchFromSemver","encodedSDKVersion","encodedTechVersion","featureCode","SDKCode","SEO_TYPES","CloudinaryFile","publicID","cloudConfig","setPublicID","setCloudConfig","setURLConfig","cloudName","apiKey","apiSecret","authToken","newType","newSuffix","suffix","signature","newVersion","version","assetType","overwriteOptions","createCloudinaryURL","suffixContainsDot","suffixContainsSlash","handleAssetType","handleDeliveryType","hasSuffix","regularSEOType","shortSEOType","validateAssetForURLCreation","prefix","privateCDN","getUrlPrefix","transformationString","shouldForceVersion","publicIDContainsVersion","isUrl","isFileName","getUrlVersion","getResourceType","getSignature","safeURL","encodeURI","shouldAddAnalytics","analytics","queryParamsString","URLSearchParams","err","CloudinaryTransformable","animated","border","reshape","resize","roundCorners","addVariable","conditionalAction","conditional","effect","adjust","rotate","delivery","backgroundColor","psdTools","extract","addTransformation","underlay","CloudinaryImage","VideoTransformation","CloudinaryVideo","transcode","videoEdit","Cloudinary","cloudinaryConfig","cloud","url"],"sourceRoot":""}